apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config--boost
data:
  default.conf: |-

    server {
      listen 80;
      server_name {{.Values.publicFqdn}};
      # return 301 $scheme://www.{{.Values.publicFqdn}}$request_uri;
      return 301 https://www.{{.Values.publicFqdn}}$request_uri;
    }

    server {
      listen 80;
      server_name {{.Values.publicFqdn2}};
      # return 301 $scheme://www.{{.Values.publicFqdn2}}$request_uri;
      return 301 https://www.{{.Values.publicFqdn2}}$request_uri;
    }

    server {
      listen 80;
      server_name {{.Values.publicFqdn3}};
      # return 301 $scheme://www.{{.Values.publicFqdn3}}$request_uri;
      return 301 https://www.{{.Values.publicFqdn3}}$request_uri;
    }

    server {
      listen 80;
      server_name {{.Values.publicFqdn4}};
      # return 301 $scheme://www.{{.Values.publicFqdn4}}$request_uri;
      return 301 https://www.{{.Values.publicFqdn4}}$request_uri;
    }

    server {
      listen 80 deferred default;
      server_name www.{{.Values.publicFqdn}} www.{{.Values.publicFqdn2}} www.{{.Values.publicFqdn3}} www.{{.Values.publicFqdn4}} ;

      error_log /dev/stdout info;
      access_log /dev/stdout main;

      proxy_set_header        Host            $host;
      proxy_set_header        X-Real-IP       $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      client_max_body_size    {{.Values.clientMaxBodySize|quote}};
      client_body_buffer_size 128k;
      proxy_connect_timeout   90;
      proxy_send_timeout      90;
      proxy_read_timeout      90;
      proxy_buffers           16 100k;

      proxy_redirect off;

      location /lbcheck {
          return 200 'OK';
          add_header Content-Type text/plain;
      }

      location @django1 {
          proxy_pass http://unix:/run/gunicorn.sock;
          proxy_intercept_errors on;
          recursive_error_pages on;
          error_page 404 = @django2;
      }

      location @django2 {
          if ($uri !~* /$ ) {
              # "basic" redirect, adding a slash:
              # rewrite  ^(.*)$  $1/ redirect;
              #
              # instead, redirect everything to https
              # (since nginx is only seeing http at the pod)
              rewrite  ^(.*)$  https://$host$1/ redirect;
          }
          proxy_pass http://unix:/run/gunicorn.sock;
      }

      location / {
          try_files not_a_file.html @django1;
      }

      location /static {
        alias /code/static_deploy;
        # manage in CDN
        # expires 7d;
      }

      location /media {
        alias /code/media;
        # manage in CDN
        # expires 1d;
      }

      location ~ ^/sgi/stl/(.*)$ { return 301 https://stl.boost.org/$1; }
      location = /more/getting_started/index.html { return 301 /doc/user-guide/getting-started.html; }
      location = /map.html { return 301 /docs/; }
      location = /users/ { return 301 /doc/user-guide/index.html; }
      location = /users/download/ { return 301 /releases/; }
      location = /users/news/ { return 301 /news/; }
      location = /users/history/ { return 301 /releases/; }
      location = /users/license.html { return 301 /doc/user-guide/bsl.html; }
      location = /users/memoriam.html { return 301 /doc/user-guide/in-memoriam-beman-dawes.html; }
      location = /users/memoriam/beman_dawes.html { return 301 /doc/user-guide/in-memoriam-beman-dawes.html; }
      location = /users/bibliography.html { return 301 /doc/user-guide/resources.html; }
      location = /users/faq.html { return 301 /doc/user-guide/faq.html; }
      location = /users/proposal.pdf { return 301 /doc/user-guide/boost-history.html; }
      location ~ ^/users/history/version_(\d+)_(\d+)_(\d+)\.html$ { return 301 /releases/$1.$2.$3/; }
      location = /community/groups.html { return 301 /community/; }
      location = /community/policy.html { return 301 /doc/user-guide/discussion-policy.html; }
      location = /community/cpp.html { return 301 /doc/user-guide/faq.html#isocommitteemeetings; }
      location = /community/committee.html { return 301 /doc/user-guide/faq.html#isocommitteemeetings; }
      location = /community/generic_programming.html { return 301 /doc/user-guide/generic-programming.html; }
      location = /community/exception_safety.html { return 301 /doc/user-guide/exception-safety.html; }
      location = /community/counted_body.html { return 301 /doc/user-guide/counted-body.html; }
      location = /community/implementation_variations.html { return 301 /doc/user-guide/implementation-variations.html; }
      location = /community/requests.html { return 301 /community/; }
      location = /community/reviews.html { return 301 /review/; }
      location = /community/review_schedule.html { return 301 /review/past/; }
      location = /development/index.html { return 301 /boost-development/; }
      location = /development/submissions.html { return 301 /review/; }
      location = /development/bugs.html { return 301 /doc/user-guide/reporting-issues.html; }
      location = /development/pull_requests.php { return 301 $scheme://$host; }
      location = /development/testing.html { return 301 /doc/contributor-guide/testing/boost-test-matrix.html#_regression_dashboard; }
      location ~ /development/tests/master/developer/([^/]+).html { return 301 https://regression.boost.org/master/developer/$1.html; }
      location ~ /development/tests/develop/developer/([^/]+).html { return 301 https://regression.boost.org/develop/developer/$1.html; }
      location ~ ^/(development/running_regression_tests.html|doc/regression)$ { return 301 /doc/contributor-guide/testing/regression-tests.html; }
      location = /development/requirements.html { return 301 /doc/contributor-guide/index.html; }
      location = /development/test.html { return 301 /doc/contributor-guide/testing/intro.html; }
      location = /development/header.html { return 301 /doc/contributor-guide/design-guide/headers.html; }
      location = /development/separate_compilation.html { return 301 /doc/contributor-guide/design-guide/separate-compilation.html; }
      location = /development/library_metadata.html { return 301 /doc/contributor-guide/requirements/library-metadata.html; }
      location = /more/generic_exception_safety.html { return 301 /doc/user-guide/exception-safety.html; }
      location = /doc/ { return 301 /libraries/; }
      location = /libs/ { return 301 /libraries/; }
      location = /doc/libs/ { return 301 /libraries/; }
      location = /build/ { return 301 /tools/build/; }
      location = /more/lib_guide.htm { return 301 /doc/contributor-guide/index.html; }

      # redirect from docs urls where the version is prefixed with 'boost_'
      location ~ ^(/doc/libs/)boost_([0-9_]+)(/\\S+) { return 301 $1$2$3; }

      # Generalized rules for simple libs patterns,
      # TODO: needs matching development if combining is to be worked back into redirect generation branch or
      #  adding to the exclusion list if kept here as an unreplaced block
      location ~ ^/doc/libs/(\\d+)_(\\d+)_(\\d+)/libs/([^/]+)/(example|src|test)$ { return 301 https://github.com/boostorg/$4/tree/boost-$1.$2.$3/$5; }
      location ~ ^/doc/libs/([^/]+)/libs/([^/]+)/(example|src|test)$ { return 301 https://github.com/boostorg/$2/tree/{{.Values.boostLatestRelease}}/$3; }

      # the following block of locations are from the nginx redirect configuration script and
      #  should be replaced with the newly generated block as a whole
      # TODO: the version/unversioned pairing needs matching development if worked back into redirect generation branch

      location = /doc/libs/1.33.0/libs/spirit/example { return 301 https://github.com/boostorg/spirit/tree/boost-1.33.0/example; }
      location = /doc/libs/1.69.0/libs/beast/example/cppcon2018 { return 301 https://github.com/boostorg/beast/tree/boost-1.69.0/example/cppcon2018; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/boost/archive/detail$ { return 301 https://github.com/boostorg/serialization/tree/boost-$1.$2.$3/include/boost/archive/detail; }
      location ~ ^/doc/libs/([^/]+)/boost/archive/detail$ { return 301 https://github.com/boostorg/serialization/tree/{{.Values.boostLatestRelease}}/include/boost/archive/detail; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/boost/archive/impl$ { return 301 https://github.com/boostorg/serialization/tree/boost-$1.$2.$3/include/boost/archive/impl; }
      location ~ ^/doc/libs/([^/]+)/boost/archive/impl$ { return 301 https://github.com/boostorg/serialization/tree/{{.Values.boostLatestRelease}}/include/boost/archive/impl; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/boost/archive/iterators$ { return 301 https://github.com/boostorg/serialization/tree/boost-$1.$2.$3/include/boost/archive/iterators; }
      location ~ ^/doc/libs/([^/]+)/boost/archive/iterators$ { return 301 https://github.com/boostorg/serialization/tree/{{.Values.boostLatestRelease}}/include/boost/archive/iterators; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/boost/compatibility/cpp_c_headers$ { return 301 https://github.com/boostorg/compatibility/tree/boost-$1.$2.$3/include/boost/compatibility/cpp_c_headers; }
      location ~ ^/doc/libs/([^/]+)/boost/compatibility/cpp_c_headers$ { return 301 https://github.com/boostorg/compatibility/tree/{{.Values.boostLatestRelease}}/include/boost/compatibility/cpp_c_headers; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/beast/example/websocket/server/chat-multi$ { return 301 https://github.com/boostorg/beast/tree/boost-$1.$2.$3/example/websocket/server/chat-multi; }
      location ~ ^/doc/libs/([^/]+)/libs/beast/example/websocket/server/chat-multi$ { return 301 https://github.com/boostorg/beast/tree/{{.Values.boostLatestRelease}}/example/websocket/server/chat-multi; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/filesystem/doc/src$ { return 301 https://github.com/boostorg/filesystem/tree/boost-$1.$2.$3/doc/src; }
      location ~ ^/doc/libs/([^/]+)/libs/filesystem/doc/src$ { return 301 https://github.com/boostorg/filesystem/tree/{{.Values.boostLatestRelease}}/doc/src; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/filesystem/v2/example$ { return 301 https://github.com/boostorg/filesystem/tree/boost-$1.$2.$3/v2/example; }
      location ~ ^/doc/libs/([^/]+)/libs/filesystem/v2/example$ { return 301 https://github.com/boostorg/filesystem/tree/{{.Values.boostLatestRelease}}/v2/example; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/filesystem/v2/src$ { return 301 https://github.com/boostorg/filesystem/tree/boost-$1.$2.$3/v2/src; }
      location ~ ^/doc/libs/([^/]+)/libs/filesystem/v2/src$ { return 301 https://github.com/boostorg/filesystem/tree/{{.Values.boostLatestRelease}}/v2/src; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/filesystem/v3/src$ { return 301 https://github.com/boostorg/filesystem/tree/boost-$1.$2.$3/v3/src; }
      location ~ ^/doc/libs/([^/]+)/libs/filesystem/v3/src$ { return 301 https://github.com/boostorg/filesystem/tree/{{.Values.boostLatestRelease}}/v3/src; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/iostreams/build$ { return 301 https://github.com/boostorg/iostreams/tree/boost-$1.$2.$3/build; }
      location ~ ^/doc/libs/([^/]+)/libs/iostreams/build$ { return 301 https://github.com/boostorg/iostreams/tree/{{.Values.boostLatestRelease}}/build; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/python/build/VisualStudio$ { return 301 https://github.com/boostorg/python/tree/boost-$1.$2.$3/build/VisualStudio; }
      location ~ ^/doc/libs/([^/]+)/libs/python/build/VisualStudio$ { return 301 https://github.com/boostorg/python/tree/{{.Values.boostLatestRelease}}/build/VisualStudio; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/regex/test/captures$ { return 301 https://github.com/boostorg/regex/tree/boost-$1.$2.$3/test/captures; }
      location ~ ^/doc/libs/([^/]+)/libs/regex/test/captures$ { return 301 https://github.com/boostorg/regex/tree/{{.Values.boostLatestRelease}}/test/captures; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/regex/test/concepts$ { return 301 https://github.com/boostorg/regex/tree/boost-$1.$2.$3/test/concepts; }
      location ~ ^/doc/libs/([^/]+)/libs/regex/test/concepts$ { return 301 https://github.com/boostorg/regex/tree/{{.Values.boostLatestRelease}}/test/concepts; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/regex/test/pathology$ { return 301 https://github.com/boostorg/regex/tree/boost-$1.$2.$3/test/pathology; }
      location ~ ^/doc/libs/([^/]+)/libs/regex/test/pathology$ { return 301 https://github.com/boostorg/regex/tree/{{.Values.boostLatestRelease}}/test/pathology; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/regex/test/regress$ { return 301 https://github.com/boostorg/regex/tree/boost-$1.$2.$3/test/regress; }
      location ~ ^/doc/libs/([^/]+)/libs/regex/test/regress$ { return 301 https://github.com/boostorg/regex/tree/{{.Values.boostLatestRelease}}/test/regress; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/spirit/example/qi/mini_xml_samples$ { return 301 https://github.com/boostorg/spirit/tree/boost-$1.$2.$3/example/qi/mini_xml_samples; }
      location ~ ^/doc/libs/([^/]+)/libs/spirit/example/qi/mini_xml_samples$ { return 301 https://github.com/boostorg/spirit/tree/{{.Values.boostLatestRelease}}/example/qi/mini_xml_samples; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/spirit/example/support/utree$ { return 301 https://github.com/boostorg/spirit/tree/boost-$1.$2.$3/example/support/utree; }
      location ~ ^/doc/libs/([^/]+)/libs/spirit/example/support/utree$ { return 301 https://github.com/boostorg/spirit/tree/{{.Values.boostLatestRelease}}/example/support/utree; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/libs/spirit/example/x3/rexpr/rexpr_full$ { return 301 https://github.com/boostorg/spirit/tree/boost-$1.$2.$3/example/x3/rexpr/rexpr_full; }
      location ~ ^/doc/libs/([^/]+)/libs/spirit/example/x3/rexpr/rexpr_full$ { return 301 https://github.com/boostorg/spirit/tree/{{.Values.boostLatestRelease}}/example/x3/rexpr/rexpr_full; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/tools/boostbook$ { return 301 https://github.com/boostorg/boostbook/tree/boost-$1.$2.$3; }
      location ~ ^/doc/libs/([^/]+)/tools/boostbook$ { return 301 https://github.com/boostorg/boostbook/tree/{{.Values.boostLatestRelease}}; }
      location ~ ^/doc/libs/(\d+)_(\d+)_(\d+)/tools/build/v2/example/customization$ { return 301 https://github.com/boostorg/build/tree/boost-$1.$2.$3/v2/example/customization; }
      location ~ ^/doc/libs/([^/]+)/tools/build/v2/example/customization$ { return 301 https://github.com/boostorg/build/tree/{{.Values.boostLatestRelease}}/v2/example/customization; }

      # block end

      include /etc/nginx/mime.types;
    }
